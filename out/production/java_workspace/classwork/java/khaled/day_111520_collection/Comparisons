Difference between ArrayList and LinkedList:
============================================
ArrayList and LinkedList both implements List interface and maintains insertion order. Both are non synchronized classes.

However, there are many differences between ArrayList and LinkedList classes that are given below.

ArrayList:
----------
    1)  ArrayList internally uses a dynamic array to store the elements.
    2)  Manipulation with ArrayList is slow because it internally uses an array. If any element is removed from the array,
        all the bits are shifted in memory.
    3) An ArrayList class can act as a list only because it implements List only.
    4) ArrayList is better for storing and accessing data.

LinkedList:
-----------
    1) LinkedList internally uses a doubly linked list to store the elements.
    2) Manipulation with LinkedList is faster than ArrayList because it uses a doubly linked list, so no bit shifting is required in memory.
    3) LinkedList class can act as a list and queue both because it implements List and Deque interfaces.
    4) LinkedList is better for manipulating data.


Difference between HashMap and TreeMap:
===============================================
HashMap	                                                        TreeMap
-----------------------------------                             -------------------------------------
1) HashMap can contain one null key.	                        TreeMap cannot contain any null key.
2) HashMap maintains no order.	                                TreeMap maintains ascending order.



Difference between HashMap and Hashtable:
=========================================
HashMap and Hashtable both are used to store data in key and value form. Both are using hashing technique to store unique keys.

But there are many differences between HashMap and Hashtable classes that are given below.

HashMap	                                                            Hashtable
----------------------------------------------------------          ------------------------------------------------------------------------
1) HashMap is non synchronized. It is not-thread safe and           Hashtable is synchronized. It is thread-safe and can be shared with many
   can't be shared between many threads without proper              threads.
   synchronization code.
2) HashMap allows one null key and multiple null values.	        Hashtable doesn't allow any null key or value.
3) HashMap is a new class introduced in JDK 1.2.	                Hashtable is a legacy class.
4) HashMap is fast.	                                                Hashtable is slow.
5) We can make the HashMap as synchronized by calling this code     Hashtable is internally synchronized and can't be unsynchronized.
    Map m = Collections.synchronizedMap(hashMap);
6) HashMap is traversed by Iterator.	                            Hashtable is traversed by Enumerator and Iterator.
7) Iterator in HashMap is fail-fast.	                            Enumerator in Hashtable is not fail-fast.
8) HashMap inherits AbstractMap class.	                            Hashtable inherits Dictionary class.